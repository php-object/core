version: '2.1'

jobs:
    composer:
        docker:
            - image: composer
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: Install Composer dependencies
                command:
                    composer install --no-dev --ignore-platform-reqs --no-interaction
            - save_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
                paths:
                    - vendor

    composer-require-checker:
        docker:
            - image: steevanb/composer-require-checker:2.1.0
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: composer-require-checker
                command: bin/ci/composerRequireChecker

    phpcs:
        docker:
            - image: steevanb/php-code-sniffs:4.2.0
        working_directory: /app
        steps:
            - checkout
            - run:
                name: phpcs
                command: bin/ci/phpcs

    phpstan-php-7-1:
        docker:
            - image: phpobject/core:phpstan-php-7-1
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: phpstan
                command: bin/ci/phpstan-php-7-1

    phpstan-php-7-2:
        docker:
            - image: phpobject/core:phpstan-php-7-2
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: phpstan
                command: bin/ci/phpstan-php-7-2

    phpstan-php-7-3:
        docker:
            - image: phpobject/core:phpstan-php-7-3
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: phpstan
                command: bin/ci/phpstan-php-7-3

    phpstan-php-7-4:
        docker:
            - image: phpobject/core:phpstan-php-7-3
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: phpstan
                command: bin/ci/phpstan-php-7-4

    phpunit-php-7-1:
        docker:
            - image: phpobject/core:phpunit-php-7-1
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: PHPUnit with PHP 7.1.0
                command: bin/test/phpunit-php-7-1

    phpunit-php-7-2:
        docker:
            - image: phpobject/core:phpunit-php-7-2
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                  key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                  name: PHPUnit with PHP 7.2.0
                  command: bin/test/phpunit-php-7-2

    phpunit-php-7-3:
        docker:
            - image: phpobject/core:phpunit-php-7-3
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                  key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                  name: PHPUnit with PHP 7.3.0
                  command: bin/test/phpunit-php-7-3

    phpunit-php-7-4:
        docker:
            - image: phpobject/core:phpunit-php-7-4
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                  key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                  name: PHPUnit with PHP 7.4.0
                  command: bin/test/phpunit-php-7-4

    phpunit-method-test-exists:
        docker:
            - image: php:7.4.5-cli-alpine3.11
        working_directory: /app
        steps:
            - checkout
            - restore_cache:
                key: vendor-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ checksum "docker/phpstan/composer.json" }}-{{ checksum "docker/phpunit/composer.json" }}
            - run:
                name: Assert all methods are tested
                command: bin/ci/phpUnitMethodTestExists -vvv

workflows:
    version: '2.1'
    CI:
        jobs:
            - phpcs
            - composer
            - composer-require-checker:
                requires:
                    - composer
            - phpstan-php-7-1:
                requires:
                    - composer
            - phpstan-php-7-2:
                  requires:
                    - composer
            - phpstan-php-7-3:
                  requires:
                    - composer
            - phpstan-php-7-4:
                  requires:
                    - composer
            - phpunit-php-7-1:
                requires:
                    - composer
            - phpunit-php-7-2:
                requires:
                    - composer
            - phpunit-php-7-3:
                requires:
                    - composer
            - phpunit-php-7-4:
                requires:
                    - composer
            - phpunit-method-test-exists:
                requires:
                    - composer
