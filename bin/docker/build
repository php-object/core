#!/usr/bin/env bash

set -eu

readonly rootDirectory=$(realpath $(dirname $(realpath $0))/../..)

readonly dockerImagePhpstanPhp71="phpobject/core:phpstan-php-7-1"
readonly dockerImagePhpstanPhp72="phpobject/core:phpstan-php-7-2"
readonly dockerImagePhpstanPhp73="phpobject/core:phpstan-php-7-3"
readonly dockerImagePhpstanPhp74="phpobject/core:phpstan-php-7-4"

readonly dockerImagePhpUnitPhp71="phpobject/core:phpunit-php-7-1"
readonly dockerImagePhpUnitPhp72="phpobject/core:phpunit-php-7-2"
readonly dockerImagePhpUnitPhp73="phpobject/core:phpunit-php-7-3"
readonly dockerImagePhpUnitPhp74="phpobject/core:phpunit-php-7-4"

outputRedirect="/tmp/php-object.docker.build.log"

function onError() {
    if [ -f "${outputRedirect}" ]; then
        cat "${outputRedirect}"
    fi

    removeOutputRedirectFile
    echo -e "\e[41m Error while building Docker images. \e[0m"
}


function removeOutputRedirectFile() {
    if [ -f "${outputRedirect}" ]; then
        rm "${outputRedirect}"
    fi
}

trap onError ERR

function buildImage() {
    trap onError ERR

    local type="${1}"
    local dockerFileExtension="${2}"
    local dockerImageTag="${3}"

    echo -e "Build Docker image \e[32m${dockerImageTag}\e[0m."
    docker \
        build \
            --force-rm \
            --tag ${dockerImageTag} \
            --file ${rootDirectory}/docker/${type}/Dockerfile.${dockerFileExtension} \
            ${dockerQuietParam} \
            ${dockerNoCacheParam} \
            . \
            > ${outputRedirect} 2>&1
}

function pushDockerImage() {
    trap onError ERR

    local tag=${1}

    echo -e "Push Docker image \e[32m${tag}\e[0m to \e[32mdockerhub\e[0m."
    docker push "${tag}" > ${outputRedirect} 2>&1
}

removeOutputRedirectFile

verbosityLevel=0
verboseParam=""
dockerNoCacheParam=""
pushDockerImages=false
for param in "$@"; do
    if [ "$param" == "-v" ]; then
        verbosityLevel=1
    elif [ "$param" == "-vv" ]; then
        verbosityLevel=2
    elif [ "$param" == "-vvv" ]; then
        verbosityLevel=3
    elif [ "$param" == "--refresh" ]; then
        dockerNoCacheParam="--no-cache --pull"
    elif [ "$param" == "--push" ]; then
        pushDockerImages=true
    fi
done

if [ ${verbosityLevel} -ge 1 ]; then
    outputRedirect="/proc/self/fd/0"
    dockerQuietParam=""
else
    dockerQuietParam="--quiet"
fi

buildImage "phpstan" "php71" "${dockerImagePhpstanPhp71}"
buildImage "phpstan" "php72" "${dockerImagePhpstanPhp72}"
buildImage "phpstan" "php73" "${dockerImagePhpstanPhp73}"
buildImage "phpstan" "php74" "${dockerImagePhpstanPhp74}"

buildImage "phpunit" "php71" "${dockerImagePhpUnitPhp71}"
buildImage "phpunit" "php72" "${dockerImagePhpUnitPhp72}"
buildImage "phpunit" "php73" "${dockerImagePhpUnitPhp73}"
buildImage "phpunit" "php74" "${dockerImagePhpUnitPhp74}"

if [ ${pushDockerImages} == true ]; then
    echo -e "Login to \e[32mdockerhub\e[0m."
    docker logout > ${outputRedirect} 2>&1
    docker login --username=phpobject

    pushDockerImage ${dockerImagePhpstanPhp71}
    pushDockerImage ${dockerImagePhpstanPhp72}
    pushDockerImage ${dockerImagePhpstanPhp73}
    pushDockerImage ${dockerImagePhpstanPhp74}

    pushDockerImage ${dockerImagePhpUnitPhp71}
    pushDockerImage ${dockerImagePhpUnitPhp72}
    pushDockerImage ${dockerImagePhpUnitPhp73}
    pushDockerImage ${dockerImagePhpUnitPhp74}
fi

removeOutputRedirectFile
